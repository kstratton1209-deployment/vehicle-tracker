To run this program, unzip this file onto local machine, and run "sh run_warehouse.sh"

1.  Add the following method to vehicle.js:

    static getTotalDistance(pings);

  This method should return the total distance traversed by the given forklift. 
  You can assume the input list is sorted with the earliest ping at the start. 
  Once you are done, use vehicle.getTotalDistance() in your implementations of:

    getAverageSpeed();

  This method should return the average speed (total distance / total time)
  observed for the given forklift. A forklift which has never moved would have
  an average speed of 0 meters per second.

2.  In warehouse_server.js, implement the following method:

    getMostTraveledSince(maxResults, timestamp);

  This method returns an array of the maxResults forklifts that have traveled
  the most distance since timestamp (inclusive), sorted by those that have
  moved most to least. You can assume the lists of pings for each vehicle are
  sorted with the earliest ping at the start.

3.  We want to be as proactive as possible in providing maintenance and repairs
    to our forklifts, especially those which may have been damaged. Complete the
    following method:

    checkForDamage();

  This method should identify a list of forklifts that might need to be
  inspected. Examples of behavior that might warrant an inspection include
  forklifts which have been driven aggressively or when forklifts collide with 
  one another. You can use any heuristics you like, but are encouraged to make 
  sure your decisions are welldocumented and your code is appropriately decomposed.


